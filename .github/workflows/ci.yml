name: CI - Testes e Validações

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

env:
    NODE_VERSION: "22.x"

jobs:
    backend-lint:
        name: Backend - Lint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "agenda-hibrida-v2/package-lock.json"

            - name: Instalar dependências
              run: |
                  cd agenda-hibrida-v2
                  npm ci

            - name: Executar ESLint
              run: |
                  cd agenda-hibrida-v2
                  npm run lint

    backend-tests:
        name: Backend - Testes
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                node-version: ["22.x"]

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
                  cache-dependency-path: "agenda-hibrida-v2/package-lock.json"

            - name: Instalar dependências
              run: |
                  cd agenda-hibrida-v2
                  npm ci

            - name: Executar testes unitários
              run: |
                  cd agenda-hibrida-v2
                  npm run test:unit

            - name: Executar testes de integração
              run: |
                  cd agenda-hibrida-v2
                  npm run test:integration

            - name: Upload coverage para Codecov
              if: matrix.os == 'ubuntu-latest'
              uses: codecov/codecov-action@v4
              with:
                  files: ./agenda-hibrida-v2/coverage/lcov.info
                  flags: backend
                  name: backend-coverage
                  fail_ci_if_error: false

    backend-security:
        name: Backend - Security Audit
        runs-on: ubuntu-latest

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Executar npm audit
              run: |
                  cd agenda-hibrida-v2
                  npm audit --production --audit-level=high || true

    frontend-lint:
        name: Frontend - Lint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "agenda-hibrida-frontend/pnpm-lock.yaml"

            - name: Instalar pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10.4.1

            - name: Instalar dependências
              run: |
                  cd agenda-hibrida-frontend
                  pnpm install --frozen-lockfile

            - name: Executar ESLint
              run: |
                  cd agenda-hibrida-frontend
                  pnpm run lint

    frontend-build:
        name: Frontend - Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "agenda-hibrida-frontend/pnpm-lock.yaml"

            - name: Instalar pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10.4.1

            - name: Instalar dependências
              run: |
                  cd agenda-hibrida-frontend
                  pnpm install --frozen-lockfile

            - name: Build de produção
              run: |
                  cd agenda-hibrida-frontend
                  pnpm run build

            - name: Verificar tamanho do build
              run: |
                  cd agenda-hibrida-frontend/dist
                  MAIN_SIZE=$(du -k assets/*.js 2>/dev/null | sort -nr | head -1 | cut -f1)
                  TOTAL_SIZE=$(du -sk . | cut -f1)
                  echo "📦 Tamanho do maior arquivo JS: ${MAIN_SIZE}KB"
                  echo "📦 Tamanho total do build: ${TOTAL_SIZE}KB"
                  if [ $MAIN_SIZE -gt 500 ]; then
                    echo "⚠️ AVISO: Arquivo JS principal muito grande (>500KB)"
                  fi
                  if [ $TOTAL_SIZE -gt 2048 ]; then
                    echo "⚠️ AVISO: Build total muito grande (>2MB)"
                  fi

            - name: Upload build artifacts
              uses: actions/upload-artifact@v5
              with:
                  name: frontend-build
                  path: agenda-hibrida-frontend/dist
                  retention-days: 7

    frontend-tests:
        name: Frontend - Testes Unitários
        runs-on: ubuntu-latest

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "agenda-hibrida-frontend/pnpm-lock.yaml"

            - name: Instalar pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10.4.1

            - name: Instalar dependências
              run: |
                  cd agenda-hibrida-frontend
                  pnpm install --frozen-lockfile

            - name: Executar testes unitários
              run: |
                  cd agenda-hibrida-frontend
                  pnpm run test:unit || echo "Nenhum teste unitário encontrado"

            - name: Upload coverage para Codecov
              uses: codecov/codecov-action@v4
              with:
                  files: ./agenda-hibrida-frontend/coverage/lcov.info
                  flags: frontend
                  name: frontend-coverage
                  fail_ci_if_error: false

    e2e-tests:
        name: Frontend - Testes E2E
        runs-on: ubuntu-latest
        timeout-minutes: 30

        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Instalar pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 10.4.1

            - name: Instalar dependências do backend
              run: |
                  cd agenda-hibrida-v2
                  npm ci

            - name: Instalar dependências do frontend
              run: |
                  cd agenda-hibrida-frontend
                  pnpm install --frozen-lockfile

            - name: Instalar Playwright browsers
              run: |
                  cd agenda-hibrida-frontend
                  pnpm exec playwright install --with-deps chromium

            - name: Executar testes E2E
              run: |
                  cd agenda-hibrida-frontend
                  pnpm run test:e2e --project=chromium
              env:
                  CI: true

            - name: Upload Playwright report
              if: failure()
              uses: actions/upload-artifact@v5
              with:
                  name: playwright-report
                  path: agenda-hibrida-frontend/playwright-report
                  retention-days: 7

            - name: Upload test results
              if: failure()
              uses: actions/upload-artifact@v5
              with:
                  name: test-results
                  path: agenda-hibrida-frontend/test-results
                  retention-days: 7

    summary:
        name: Build Summary
        runs-on: ubuntu-latest
        needs:
            [
                backend-lint,
                backend-tests,
                backend-security,
                frontend-lint,
                frontend-build,
                frontend-tests,
                e2e-tests,
            ]
        if: always()

        steps:
            - name: Check results
              run: |
                  echo "## 📊 Resumo do CI" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
                  echo "| Backend Lint | ${{ needs.backend-lint.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Backend Tests | ${{ needs.backend-tests.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Backend Security | ${{ needs.backend-security.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Frontend Lint | ${{ needs.frontend-lint.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Frontend Build | ${{ needs.frontend-build.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Frontend Tests | ${{ needs.frontend-tests.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY

            - name: Fail if any job failed
              if: |
                  needs.backend-lint.result == 'failure' ||
                  needs.backend-tests.result == 'failure' ||
                  needs.frontend-lint.result == 'failure' ||
                  needs.frontend-build.result == 'failure' ||
                  needs.frontend-tests.result == 'failure' ||
                  needs.e2e-tests.result == 'failure'
              run: exit 1
