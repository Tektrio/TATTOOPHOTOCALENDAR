name: Security - Verifica√ß√µes de Seguran√ßa

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 9 * * 1" # Segunda-feira √†s 9h UTC

env:
  NODE_VERSION: "22.x"

jobs:
  dependency-audit:
    name: Auditoria de Depend√™ncias
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Audit Backend
        run: |
          cd agenda-hibrida-v2
          echo "## üîç Backend Dependencies Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --json > audit-backend.json || true
          npm audit --audit-level=moderate || echo "‚ö†Ô∏è Vulnerabilidades encontradas no backend"
          cat audit-backend.json | jq -r '.metadata | "Total: \(.vulnerabilities.total), Critical: \(.vulnerabilities.critical), High: \(.vulnerabilities.high)"' >> $GITHUB_STEP_SUMMARY

      - name: Audit Frontend
        run: |
          cd agenda-hibrida-frontend
          echo "## üîç Frontend Dependencies Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --json > audit-frontend.json || true
          npm audit --audit-level=moderate || echo "‚ö†Ô∏è Vulnerabilidades encontradas no frontend"
          cat audit-frontend.json | jq -r '.metadata | "Total: \(.vulnerabilities.total), Critical: \(.vulnerabilities.critical), High: \(.vulnerabilities.high)"' >> $GITHUB_STEP_SUMMARY

  secret-scanning:
    name: Scan de Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v4

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:${{ matrix.language }}"

  outdated-check:
    name: Verificar Pacotes Desatualizados
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check Backend Outdated
        run: |
          cd agenda-hibrida-v2
          echo "## üì¶ Backend - Pacotes Desatualizados" >> $GITHUB_STEP_SUMMARY
          npm outdated || echo "Pacotes encontrados" >> $GITHUB_STEP_SUMMARY

      - name: Check Frontend Outdated
        run: |
          cd agenda-hibrida-frontend
          echo "## üì¶ Frontend - Pacotes Desatualizados" >> $GITHUB_STEP_SUMMARY
          npm outdated || echo "Pacotes encontrados" >> $GITHUB_STEP_SUMMARY

  license-check:
    name: Verifica√ß√£o de Licen√ßas
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check Backend Licenses
        run: |
          cd agenda-hibrida-v2
          npm ci
          echo "## üìú Backend - Licen√ßas" >> $GITHUB_STEP_SUMMARY
          license-checker --summary >> $GITHUB_STEP_SUMMARY || true

      - name: Check Frontend Licenses
        run: |
          cd agenda-hibrida-frontend
          npm install
          echo "## üìú Frontend - Licen√ßas" >> $GITHUB_STEP_SUMMARY
          license-checker --summary >> $GITHUB_STEP_SUMMARY || true

  security-summary:
    name: Resumo de Seguran√ßa
    runs-on: ubuntu-latest
    needs:
      [
        dependency-audit,
        secret-scanning,
        codeql-analysis,
        outdated-check,
        license-check,
      ]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## üîê Resumo de Seguran√ßa" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Verifica√ß√£o | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Audit | ${{ needs.dependency-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scanning | ${{ needs.secret-scanning.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Outdated Check | ${{ needs.outdated-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Check | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY

      - name: Fail on critical issues
        if: |
          needs.dependency-audit.result == 'failure' ||
          needs.secret-scanning.result == 'failure' ||
          needs.codeql-analysis.result == 'failure'
        run: |
          echo "‚ùå Issues cr√≠ticas de seguran√ßa encontradas!"
          exit 1
